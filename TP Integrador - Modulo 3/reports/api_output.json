{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-24T19:26:15.452Z",
    "end": "2025-10-24T19:26:16.225Z",
    "duration": 773,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Punto 3 - PokeAPI",
        "suites": [],
        "tests": [
          {
            "title": "Caso 1",
            "fullTitle": "Punto 3 - PokeAPI Caso 1",
            "duration": 350,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cy.request('GET', 'https://pokeapi.co/api/v2/berry/1').then(resp => {\n  expect(resp.status).to.equal(200);\n  const body = resp.body;\n  expect(body).to.have.property('size', 20);\n  expect(body).to.have.property('soil_dryness', 15);\n  // firmness es un objeto con name\n  expect(body.firmness).to.have.property('name', 'soft');\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b7437241-93f3-4869-8e74-ff57a764cad1",
            "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
            "skipped": false
          },
          {
            "title": "Caso 2",
            "fullTitle": "Punto 3 - PokeAPI Caso 2",
            "duration": 168,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// Traigo berry/1 primero para comparar\ncy.request('GET', 'https://pokeapi.co/api/v2/berry/1').then(r1 => {\n  expect(r1.status).to.equal(200);\n  const size1 = r1.body.size;\n  const soil1 = r1.body.soil_dryness;\n  cy.request('GET', 'https://pokeapi.co/api/v2/berry/2').then(r2 => {\n    expect(r2.status).to.equal(200);\n    const b2 = r2.body;\n    expect(b2.firmness).to.have.property('name', 'super-hard');\n    expect(b2.size).to.be.greaterThan(size1);\n    expect(b2.soil_dryness).to.equal(soil1);\n  });\n});",
            "err": {},
            "isRoot": false,
            "uuid": "cc84b3d0-f495-4edf-8802-460b8f271537",
            "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
            "skipped": false
          },
          {
            "title": "Caso 3",
            "fullTitle": "Punto 3 - PokeAPI Caso 3",
            "duration": 185,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cy.request('GET', 'https://pokeapi.co/api/v2/pokemon/pikachu/').then(resp => {\n  expect(resp.status).to.equal(200);\n  const p = resp.body;\n  expect(p).to.have.property('base_experience');\n  expect(p.base_experience).to.be.greaterThan(10);\n  expect(p.base_experience).to.be.lessThan(1000);\n  // types es un array de objetos { slot, type: { name, url } }\n  const types = p.types.map(t => t.type.name);\n  expect(types).to.include('electric');\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3a4c2b8c-c25c-4982-94db-91ae6fbd4fe3",
            "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
            "skipped": false
          }
        ],
        "root": false,
        "pending": [],
        "_timeout": 2000,
        "file": "",
        "uuid": "daffc8df-0c33-4408-b7b2-741620128c13",
        "fullFile": "",
        "passes": [
          {
            "title": "Caso 1",
            "fullTitle": "Punto 3 - PokeAPI Caso 1",
            "duration": 350,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cy.request('GET', 'https://pokeapi.co/api/v2/berry/1').then(resp => {\n  expect(resp.status).to.equal(200);\n  const body = resp.body;\n  expect(body).to.have.property('size', 20);\n  expect(body).to.have.property('soil_dryness', 15);\n  // firmness es un objeto con name\n  expect(body.firmness).to.have.property('name', 'soft');\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b7437241-93f3-4869-8e74-ff57a764cad1",
            "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
            "skipped": false
          },
          {
            "title": "Caso 2",
            "fullTitle": "Punto 3 - PokeAPI Caso 2",
            "duration": 168,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// Traigo berry/1 primero para comparar\ncy.request('GET', 'https://pokeapi.co/api/v2/berry/1').then(r1 => {\n  expect(r1.status).to.equal(200);\n  const size1 = r1.body.size;\n  const soil1 = r1.body.soil_dryness;\n  cy.request('GET', 'https://pokeapi.co/api/v2/berry/2').then(r2 => {\n    expect(r2.status).to.equal(200);\n    const b2 = r2.body;\n    expect(b2.firmness).to.have.property('name', 'super-hard');\n    expect(b2.size).to.be.greaterThan(size1);\n    expect(b2.soil_dryness).to.equal(soil1);\n  });\n});",
            "err": {},
            "isRoot": false,
            "uuid": "cc84b3d0-f495-4edf-8802-460b8f271537",
            "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
            "skipped": false
          },
          {
            "title": "Caso 3",
            "fullTitle": "Punto 3 - PokeAPI Caso 3",
            "duration": 185,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "cy.request('GET', 'https://pokeapi.co/api/v2/pokemon/pikachu/').then(resp => {\n  expect(resp.status).to.equal(200);\n  const p = resp.body;\n  expect(p).to.have.property('base_experience');\n  expect(p.base_experience).to.be.greaterThan(10);\n  expect(p.base_experience).to.be.lessThan(1000);\n  // types es un array de objetos { slot, type: { name, url } }\n  const types = p.types.map(t => t.type.name);\n  expect(types).to.include('electric');\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3a4c2b8c-c25c-4982-94db-91ae6fbd4fe3",
            "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 703,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "root": true,
    "pending": [],
    "_timeout": 2000,
    "file": "Cypress\\cypress\\e2e\\Ejercicio_3_API.cy.js",
    "uuid": "d63def3e-1e36-4777-a77c-d89dca248854",
    "fullFile": "Cypress\\cypress\\e2e\\Ejercicio_3_API.cy.js",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Caso 1",
      "fullTitle": "Punto 3 - PokeAPI Caso 1",
      "duration": 350,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "cy.request('GET', 'https://pokeapi.co/api/v2/berry/1').then(resp => {\n  expect(resp.status).to.equal(200);\n  const body = resp.body;\n  expect(body).to.have.property('size', 20);\n  expect(body).to.have.property('soil_dryness', 15);\n  // firmness es un objeto con name\n  expect(body.firmness).to.have.property('name', 'soft');\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b7437241-93f3-4869-8e74-ff57a764cad1",
      "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
      "skipped": false
    },
    {
      "title": "Caso 2",
      "fullTitle": "Punto 3 - PokeAPI Caso 2",
      "duration": 168,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// Traigo berry/1 primero para comparar\ncy.request('GET', 'https://pokeapi.co/api/v2/berry/1').then(r1 => {\n  expect(r1.status).to.equal(200);\n  const size1 = r1.body.size;\n  const soil1 = r1.body.soil_dryness;\n  cy.request('GET', 'https://pokeapi.co/api/v2/berry/2').then(r2 => {\n    expect(r2.status).to.equal(200);\n    const b2 = r2.body;\n    expect(b2.firmness).to.have.property('name', 'super-hard');\n    expect(b2.size).to.be.greaterThan(size1);\n    expect(b2.soil_dryness).to.equal(soil1);\n  });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "cc84b3d0-f495-4edf-8802-460b8f271537",
      "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
      "skipped": false
    },
    {
      "title": "Caso 3",
      "fullTitle": "Punto 3 - PokeAPI Caso 3",
      "duration": 185,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "cy.request('GET', 'https://pokeapi.co/api/v2/pokemon/pikachu/').then(resp => {\n  expect(resp.status).to.equal(200);\n  const p = resp.body;\n  expect(p).to.have.property('base_experience');\n  expect(p.base_experience).to.be.greaterThan(10);\n  expect(p.base_experience).to.be.lessThan(1000);\n  // types es un array de objetos { slot, type: { name, url } }\n  const types = p.types.map(t => t.type.name);\n  expect(types).to.include('electric');\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3a4c2b8c-c25c-4982-94db-91ae6fbd4fe3",
      "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Caso 1",
      "fullTitle": "Punto 3 - PokeAPI Caso 1",
      "duration": 350,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "cy.request('GET', 'https://pokeapi.co/api/v2/berry/1').then(resp => {\n  expect(resp.status).to.equal(200);\n  const body = resp.body;\n  expect(body).to.have.property('size', 20);\n  expect(body).to.have.property('soil_dryness', 15);\n  // firmness es un objeto con name\n  expect(body.firmness).to.have.property('name', 'soft');\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b7437241-93f3-4869-8e74-ff57a764cad1",
      "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
      "skipped": false
    },
    {
      "title": "Caso 2",
      "fullTitle": "Punto 3 - PokeAPI Caso 2",
      "duration": 168,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "// Traigo berry/1 primero para comparar\ncy.request('GET', 'https://pokeapi.co/api/v2/berry/1').then(r1 => {\n  expect(r1.status).to.equal(200);\n  const size1 = r1.body.size;\n  const soil1 = r1.body.soil_dryness;\n  cy.request('GET', 'https://pokeapi.co/api/v2/berry/2').then(r2 => {\n    expect(r2.status).to.equal(200);\n    const b2 = r2.body;\n    expect(b2.firmness).to.have.property('name', 'super-hard');\n    expect(b2.size).to.be.greaterThan(size1);\n    expect(b2.soil_dryness).to.equal(soil1);\n  });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "cc84b3d0-f495-4edf-8802-460b8f271537",
      "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
      "skipped": false
    },
    {
      "title": "Caso 3",
      "fullTitle": "Punto 3 - PokeAPI Caso 3",
      "duration": 185,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "cy.request('GET', 'https://pokeapi.co/api/v2/pokemon/pikachu/').then(resp => {\n  expect(resp.status).to.equal(200);\n  const p = resp.body;\n  expect(p).to.have.property('base_experience');\n  expect(p.base_experience).to.be.greaterThan(10);\n  expect(p.base_experience).to.be.lessThan(1000);\n  // types es un array de objetos { slot, type: { name, url } }\n  const types = p.types.map(t => t.type.name);\n  expect(types).to.include('electric');\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3a4c2b8c-c25c-4982-94db-91ae6fbd4fe3",
      "parentUUID": "daffc8df-0c33-4408-b7b2-741620128c13",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2025
}